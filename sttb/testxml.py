# -*- coding: utf-8 -*
"""SixTrack Test Builds

  SixTrack Test Builds - TestXML Class
 ======================================
  By: Veronica Berglyd Olsen
      CERN (BE-ABP-HSS)
      Geneva, Switzerland
"""

import logging

from os   import path
from lxml import etree

logger = logging.getLogger("sttb-logger")

class TestXML():
  """
  This class will read and parse the XML file generated by ctest
  """

  def __init__(self, xmlFile):

    self.xmlFile = xmlFile
    self.testRes = {}

    if not path.isfile(xmlFile):
      logger.error("File not dound: %s" % xmlFile)
      return

    self._parseXML()

    return

  def getTestCount(self):
    """
    Returns the total number of tests, and the number of passed and failed tests.
    The remaining number (nTest - nPass - nFail) is the number of tests with other
    statuses, like 'not run'
    """

    nTest = 0
    nPass = 0
    nFail = 0

    for testName in self.testRes.keys():
      nTest += 1
      if self.testRes[testName]["Status"] == "passed":
        nPass += 1
      elif self.testRes[testName]["Status"] == "failed":
        nFail += 1

    return nTest, nPass, nFail

  def _parseXML(self):
    """
    Loops through the XML tree form the ctest XML file extracting the information
    we want for the logging.
    """

    inXML = etree.parse(self.xmlFile)
    xRoot = inXML.getroot()

    for xChild in xRoot:
      if xChild.tag == "Testing":
        for xItem in xChild:
          if xItem.tag != "Test":
            continue
          tName   = "Unknown"
          tResult = {
            "Status"     : xItem.attrib["Status"], # Passed, failed or otherwise
            "Completion" : "Unknown",              # Completion status
            "RunTime"    : 0.0,                    # Runtime in milliseconds
            "Lables"     : [],                     # The test labels, e.g. fast, medium, etc
          }
          for xEntry in xItem:
            if xEntry.tag == "Name":
              tName = xEntry.text
            elif xEntry.tag == "Results":
              for xResult in xEntry:
                if xResult.tag == "NamedMeasurement":
                  if xResult.attrib["name"] == "Completion Status":
                    for xValue in xResult:
                      if xValue.tag == "Value":
                        tResult["Completion"] = xValue.text
                  elif xResult.attrib["name"] == "Execution Time":
                    for xValue in xResult:
                      if xValue.tag == "Value":
                        tResult["RunTime"] = float(xValue.text)*1e3
            elif xEntry.tag == "Labels":
              for xLabel in xEntry:
                tResult["Lables"].append(xLabel.text)
          self.testRes[tName] = tResult

    return

# END Class TestXML
